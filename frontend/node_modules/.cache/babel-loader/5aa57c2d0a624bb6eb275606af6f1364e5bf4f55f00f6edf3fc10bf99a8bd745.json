{"ast":null,"code":"import axios from 'axios';\nclass AuthenticationService {\n  executeBasicAuthenticationService(username, password) {\n    return axios.get('http://localhost:8080/basicauth', {\n      headers: {\n        authorization: this.createBasicAuthToken(username, password)\n      }\n    });\n  }\n  createBasicAuthToken(username, password) {\n    return basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password); //baisc 64 encoding\n  }\n\n  registerSuccessfulLogin(username, password) {\n    //let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password); //baisc 64 encoding\n    //console.log('registerSuccessfulLogin')\n    sessionStorage.setItem('authenticatedUser', username);\n    this.setupAxiosInterceptors(createBasicAuthToken(username, password));\n  }\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n  setupAxiosInterceptors(basicAuthHeader) {\n    //{Authorization: basicAuthHeaderString}\n    axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        config.headers.authorization = basicAuthHeader;\n      }\n      return config;\n    });\n  }\n}\nexport default new AuthenticationService();","map":{"version":3,"names":["axios","AuthenticationService","executeBasicAuthenticationService","username","password","get","headers","authorization","createBasicAuthToken","basicAuthHeader","window","btoa","registerSuccessfulLogin","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","interceptors","request","use","config"],"sources":["/Users/liwenwen/Desktop/MS/project/todoapp/todo-app/src/components/todo/AuthenticationService.js"],"sourcesContent":["import axios from 'axios'\n\nclass AuthenticationService{\n\n    executeBasicAuthenticationService(username, password) {\n        return axios.get('http://localhost:8080/basicauth', \n        {headers: {authorization:this.createBasicAuthToken(username, password)}})\n    }\n    createBasicAuthToken(username, password){\n        return basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password); //baisc 64 encoding\n    }\n    registerSuccessfulLogin(username, password){\n        //let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password); //baisc 64 encoding\n        //console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username);\n        this.setupAxiosInterceptors(createBasicAuthToken(username, password))\n    }\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) return false\n        return true\n    }\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) return ''\n        return user\n    }\n    setupAxiosInterceptors(basicAuthHeader) {\n        //{Authorization: basicAuthHeaderString}\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()) {\n                    config.headers.authorization = basicAuthHeader\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService()"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,qBAAqB;EAEvBC,iCAAiCA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAClD,OAAOJ,KAAK,CAACK,GAAG,CAAC,iCAAiC,EAClD;MAACC,OAAO,EAAE;QAACC,aAAa,EAAC,IAAI,CAACC,oBAAoB,CAACL,QAAQ,EAAEC,QAAQ;MAAC;IAAC,CAAC,CAAC;EAC7E;EACAI,oBAAoBA,CAACL,QAAQ,EAAEC,QAAQ,EAAC;IACpC,OAAOK,eAAe,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACR,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAChF;;EACAQ,uBAAuBA,CAACT,QAAQ,EAAEC,QAAQ,EAAC;IACvC;IACA;IACAS,cAAc,CAACC,OAAO,CAAC,mBAAmB,EAAEX,QAAQ,CAAC;IACrD,IAAI,CAACY,sBAAsB,CAACP,oBAAoB,CAACL,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EACzE;EACAY,MAAMA,CAAA,EAAE;IACJH,cAAc,CAACI,UAAU,CAAC,mBAAmB,CAAC;EAClD;EACAC,cAAcA,CAAA,EAAE;IACZ,IAAIC,IAAI,GAAGN,cAAc,CAACO,OAAO,CAAC,mBAAmB,CAAC;IACtD,IAAGD,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;IAC9B,OAAO,IAAI;EACf;EACAE,mBAAmBA,CAAA,EAAE;IACjB,IAAIF,IAAI,GAAGN,cAAc,CAACO,OAAO,CAAC,mBAAmB,CAAC;IACtD,IAAGD,IAAI,KAAK,IAAI,EAAE,OAAO,EAAE;IAC3B,OAAOA,IAAI;EACf;EACAJ,sBAAsBA,CAACN,eAAe,EAAE;IACpC;IACAT,KAAK,CAACsB,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;MACR,IAAG,IAAI,CAACP,cAAc,CAAC,CAAC,EAAE;QACtBO,MAAM,CAACnB,OAAO,CAACC,aAAa,GAAGE,eAAe;MAClD;MACA,OAAOgB,MAAM;IACjB,CACJ,CAAC;EACL;AACJ;AAEA,eAAe,IAAIxB,qBAAqB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}